import random

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—ñ —Å–ª–æ–≤–∞ –∑ —Ñ–∞–π–ª—É
WORDS = []

# –Ü–≥—Ä–æ–≤–∏–π —Å—Ç–∞–Ω –∫–æ–∂–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
user_game_state = {}

async def load_words():
    global WORDS
    try:
        with open("words.txt", "r", encoding="utf-8") as f:
            text = f.read()
            # –†–æ–∑–¥—ñ–ª–µ–Ω–Ω—è –ø–æ –ø—Ä–æ–±—ñ–ª–∞—Ö, –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–Ω—è—Ö —Ä—è–¥–∫—ñ–≤, —Ç–∞–±–∞—Ö
            raw_words = text.replace('\n', ' ').replace('\r', ' ').replace('\t', ' ')
            WORDS = [w.strip().lower() for w in raw_words.split() if w.strip()]
        print(f"‚úÖ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ {len(WORDS)} —Å–ª—ñ–≤ –∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª—É.")
    except Exception as e:
        print(f"‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Å–ª–æ–≤–∞: {e}")

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø—ñ–¥–∫–∞–∑–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤—ñ –æ—Å—Ç–∞–Ω–Ω—å–æ—ó —Å–ø—Ä–æ–±–∏
def get_progress_hint(word, guesses):
    last_guess = guesses[-1]
    hint = []

    for i in range(len(last_guess)):
        if i < len(word):
            if last_guess[i] == word[i]:
                hint.append(f"üîµ{last_guess[i]}")  # –ø—Ä–∞–≤–∏–ª—å–Ω–∞ –ª—ñ—Ç–µ—Ä–∞ –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º—É –º—ñ—Å—Ü—ñ
            elif last_guess[i] in word:
                hint.append(f"üü°{last_guess[i]}")  # –ª—ñ—Ç–µ—Ä–∞ —î, –∞–ª–µ –Ω–µ —Ç–∞–º
            else:
                hint.append(f"‚ùå{last_guess[i]}")  # –ª—ñ—Ç–µ—Ä–∏ –Ω–µ–º–∞—î –≤–∑–∞–≥–∞–ª—ñ
        else:
            hint.append(f"‚ùå{last_guess[i]}")  # –∑–∞–π–≤—ñ —Å–∏–º–≤–æ–ª–∏
    return ' '.join(hint)

# –û–±—Ä–æ–±–∫–∞ –≥—Ä–∏
async def process_word_game(event, user_id, text):
    state = user_game_state.get(user_id)

    if text == "—Å–ª–æ–≤–∞":
        word = random.choice(WORDS)
        user_game_state[user_id] = {
            "word": word,
            "tries": 0,
            "in_game": True,
            "guesses": []
        }
        print(f"[DEBUG] –ó–∞–≥–∞–¥–∞–Ω–µ —Å–ª–æ–≤–æ: {word}")  # –¥–ª—è —Ç–µ–±–µ –≤ –∫–æ–Ω—Å–æ–ª—å
        await event.reply(f"üß† –Ø –∑–∞–≥–∞–¥–∞–≤ —Å–ª–æ–≤–æ –∑ {len(word)} –±—É–∫–≤. –ü–∏—à–∏ '–≤–∏—Ö—ñ–¥', —â–æ–± –∑–¥–∞—Ç–∏—Å—è.")
        return True

    if text == "–≤–∏—Ö—ñ–¥" and state and state["in_game"]:
        state["in_game"] = False
        await event.reply(f"üö™ –¢–∏ –∑–¥–∞–≤—Å—è. –°–ª–æ–≤–æ –±—É–ª–æ: ¬´{state['word']}¬ª. –ù–∞–ø–∏—à–∏ '—Å–ª–æ–≤–∞', —â–æ–± —â–µ.")
        return True

    if state and state["in_game"]:
        word = state["word"]
        guess = text.strip().lower()
        state["tries"] += 1
        state["guesses"].append(guess)

        if guess == word:
            state["in_game"] = False
            await event.reply(f"üéâ –í–≥–∞–¥–∞–≤! –°–ª–æ–≤–æ –±—É–ª–æ ¬´{word}¬ª. {state['tries']} —Å–ø—Ä–æ–±.")
        else:
            hint = get_progress_hint(word, state["guesses"])
            await event.reply(f"‚ùå –ù—ñ, —Å–ø—Ä–æ–±—É–π —â–µ. –ü—ñ–¥–∫–∞–∑–∫–∞: {hint}")
        return True

    return False
